{"version":3,"sources":["components/phone-number.js","App.js","reportWebVitals.js","index.js"],"names":["PhoneNumber","useEffect","phoneNumberRegExp","onKeyPress","event","test","key","preventDefault","$phoneNumberElement","document","getElementById","addEventListener","removeEventListener","phoneCodeRegExp","$phoneCodeElement","className","type","placeholder","id","aria-label","required","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iLAuDeA,MArDf,WA4BE,OA3BAC,qBAAU,WACR,IAAMC,EAAoB,UAC1B,SAASC,EAAWC,GACbF,EAAkBG,KAAKD,EAAME,MAChCF,EAAMG,iBAIV,IAAMC,EAAsBC,SAASC,eAAe,gBAEpD,OADAF,EAAoBG,iBAAiB,WAAYR,GAC1C,kBACLK,EAAoBI,oBAAoB,WAAYT,MACrD,IAEHF,qBAAU,WACR,IAAMY,EAAkB,WACxB,SAASV,EAAWC,GACbS,EAAgBR,KAAKD,EAAME,MAC9BF,EAAMG,iBAIV,IAAMO,EAAoBL,SAASC,eAAe,cAElD,OADAI,EAAkBH,iBAAiB,WAAYR,GACxC,kBAAMW,EAAkBF,oBAAoB,WAAYT,MAC9D,IAGD,qCACE,uBAAOY,UAAU,aAAjB,0BACA,sBAAKA,UAAU,mBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,0BACVE,YAAY,MACZC,GAAG,aACHC,aAAW,mBACXC,UAAQ,IAEV,uBACEJ,KAAK,OACLD,UAAU,4BACVE,YAAY,YACZC,GAAG,eACHC,aAAW,qBACXC,UAAQ,WCPHC,MArCf,WA4BE,OA3BApB,qBAAU,WACR,IAAMC,EAAoB,UAC1B,SAASC,EAAWC,GACbF,EAAkBG,KAAKD,EAAME,MAChCF,EAAMG,iBAIV,IAAMC,EAAsBC,SAASC,eAAe,gBAEpD,OADAF,EAAoBG,iBAAiB,WAAYR,GAC1C,kBACLK,EAAoBI,oBAAoB,WAAYT,MACrD,IAEHF,qBAAU,WACR,IAAMY,EAAkB,WACxB,SAASV,EAAWC,GACbS,EAAgBR,KAAKD,EAAME,MAC9BF,EAAMG,iBAIV,IAAMO,EAAoBL,SAASC,eAAe,cAElD,OADAI,EAAkBH,iBAAiB,WAAYR,GACxC,kBAAMW,EAAkBF,oBAAoB,WAAYT,MAC9D,IAGD,qBAAKY,UAAU,iBAAf,SACE,sBAAMA,UAAU,kBAAhB,SACE,cAAC,EAAD,SCvBOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,K","file":"static/js/main.7ae91828.chunk.js","sourcesContent":["import { useEffect } from \"react\";\n\nfunction PhoneNumber() {\n  useEffect(() => {\n    const phoneNumberRegExp = /[0-9/]+/;\n    function onKeyPress(event) {\n      if (!phoneNumberRegExp.test(event.key)) {\n        event.preventDefault();\n      }\n    }\n\n    const $phoneNumberElement = document.getElementById(\"phone-number\");\n    $phoneNumberElement.addEventListener(\"keypress\", onKeyPress);\n    return () =>\n      $phoneNumberElement.removeEventListener(\"keypress\", onKeyPress);\n  }, []);\n\n  useEffect(() => {\n    const phoneCodeRegExp = /[+0-9/]+/;\n    function onKeyPress(event) {\n      if (!phoneCodeRegExp.test(event.key)) {\n        event.preventDefault();\n      }\n    }\n\n    const $phoneCodeElement = document.getElementById(\"phone-code\");\n    $phoneCodeElement.addEventListener(\"keypress\", onKeyPress);\n    return () => $phoneCodeElement.removeEventListener(\"keypress\", onKeyPress);\n  }, []);\n\n  return (\n    <>\n      <label className=\"form-label\">Phone number</label>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control phone-code\"\n          placeholder=\"+49\"\n          id=\"phone-code\"\n          aria-label=\"Enter phone code\"\n          required\n        />\n        <input\n          type=\"text\"\n          className=\"form-control phone-number\"\n          placeholder=\"123456789\"\n          id=\"phone-number\"\n          aria-label=\"Enter phone number\"\n          required\n        />\n      </div>\n    </>\n  );\n}\n\nexport default PhoneNumber;\n","import \"./App.css\";\nimport { useEffect } from \"react\";\nimport PhoneNumber from \"./components/phone-number\";\n\nfunction App() {\n  useEffect(() => {\n    const phoneNumberRegExp = /[0-9/]+/;\n    function onKeyPress(event) {\n      if (!phoneNumberRegExp.test(event.key)) {\n        event.preventDefault();\n      }\n    }\n\n    const $phoneNumberElement = document.getElementById(\"phone-number\");\n    $phoneNumberElement.addEventListener(\"keypress\", onKeyPress);\n    return () =>\n      $phoneNumberElement.removeEventListener(\"keypress\", onKeyPress);\n  }, []);\n\n  useEffect(() => {\n    const phoneCodeRegExp = /[+0-9/]+/;\n    function onKeyPress(event) {\n      if (!phoneCodeRegExp.test(event.key)) {\n        event.preventDefault();\n      }\n    }\n\n    const $phoneCodeElement = document.getElementById(\"phone-code\");\n    $phoneCodeElement.addEventListener(\"keypress\", onKeyPress);\n    return () => $phoneCodeElement.removeEventListener(\"keypress\", onKeyPress);\n  }, []);\n\n  return (\n    <div className=\"container mt-5\">\n      <form className=\"w-50 phone-form\">\n        <PhoneNumber />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}